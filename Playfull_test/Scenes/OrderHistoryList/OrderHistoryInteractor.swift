//
//  OrderHistoryInteractor.swift
//  Playfull_test
//
//  Created by ISOL on 10/09/18.
//  Copyright (c) 2018 Example. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol OrderHistoryBusinessLogic
{
  func fetchOrders(request: OrderHistory.FetchOrders.Request)
  func getFetchedOrders() -> [Order]
}

protocol OrderHistoryDataStore
{
  var ordersFullData: [Order]? { get }
}

class OrderHistoryInteractor: OrderHistoryBusinessLogic, OrderHistoryDataStore, OrderHistoryWorkerDelegate
{
  var presenter: OrderHistoryPresentationLogic?
  var worker: OrderHistoryWorker?
  var ordersFullData: [Order]?
  
  // MARK: OrderHistoryBusinessLogic methods
   
    //Fetch Order History Listing
  func fetchOrders(request: OrderHistory.FetchOrders.Request) {
    worker = OrderHistoryWorker()
    worker?.delegate = self
    worker?.fetchOrder()
  }
    
    func getFetchedOrders() -> [Order] {
        return ordersFullData ?? []
    }
    
    // MARK: OrderHistoryWorker Delegate Methods
    
    // Called when got the orders listing from the worker of scene
    func orderHistoryWorker(orderHistoryWorker: OrderHistoryWorker, didFetchOrders orders: [Order]) {
        ordersFullData = orders
        let response = OrderHistory.FetchOrders.Response(orders: orders)
        presenter?.presentFetchedOrderHistory(response: response)
    }
    
    // Called when failed to get the orders listing from the worker of scene
    func orderHistoryWorker(orderHistoryWorker: OrderHistoryWorker, didFailedToFetchOrders message: String) {
        presenter?.failedToPresentFetchedOrderHistory(message: message)
    }
}
